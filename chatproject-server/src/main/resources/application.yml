logging:
  level:
    org.springframework.web: INFO

mybatis-plus:
  mapper-locations: classpath:mapper/**/*.xml
  configuration:
    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl
    map-underscore-to-camel-case: true

spring:
  profiles:
    #运行的环境
    active: local

  application:
    name: chatproject

  datasource:
    url: jdbc:mysql://${chatproject.mysql.ip}:${chatproject.mysql.port}/${chatproject.mysql.db}?useUnicode=true&characterEncoding=UTF-8&serverTimezone=Asia/Shanghai
    username: ${chatproject.mysql.username}
    password: ${chatproject.mysql.password}
    driver-class-name: com.mysql.cj.jdbc.Driver
    hikari:
      minimum-idle: 3
      maximum-pool-size: 10
      #不能小于30秒，否则默认回到1800秒
      max-lifetime: 30000
      connection-test-query: SELECT 1
  jackson:
    serialization:
      write-dates-as-timestamps: true
  data:
    redis:
      # Redis服务器地址
      host: ${chatproject.redis.host}
      # Redis服务器端口号
      port: ${chatproject.redis.port}
      # 使用的数据库索引，默认是0
      database: 0
      # 连接超时时间
      timeout: 1800000
      # 设置密码
      password: ${chatproject.redis.password}

springdoc:
  swagger-ui:
    path: /swagger-ui.html

jwt:
  secret: ${chatproject.jwt.secret}

rocketmq:
  name-server: ${rocketmq.name-server}
  # 默认的消息组
  producer:
    group: chatGroup
    # 发送消息超时时间，单位：毫秒。默认为 3000
    send-message-timeout: 3000
    # 消息压缩阀值，当消息体的大小超过该阀值后，进行消息压缩。默认为 4 * 1024B
    compress-message-body-threshold: 4096
    # 消息体的最大允许大小。默认为 4 * 1024 * 1024B
    max-message-size: 4194304
    # 同步发送消息时，失败重试次数。默认为 2 次。
    retry-times-when-send-failed: 2
    # 异步发送消息时，失败重试次数。默认为 2 次。
    retry-times-when-send-async-failed: 2
    # 发送消息给 Broker 时，如果发送失败，是否重试另外一台 Broker 。默认为 false
    retry-next-server: false
    # Access Key
    access-key: ${rocketmq.access-key}
    # Secret Key
    secret-key: ${rocketmq.secret-key}
    # 是否开启消息轨迹功能。默认为 true 开启
    enable-msg-trace: true
    # 自定义消息轨迹的 Topic 。默认为 RMQ_SYS_TRACE_TOPIC
    customized-trace-topic: RMQ_SYS_TRACE_TOPIC
  # Consumer 配置项
  consumer:
    # Access Key
    access-key: ${rocketmq.access-key}
    # Secret Key
    secret-key: ${rocketmq.secret-key}
    # 配置某个消费分组，是否监听指定 Topic 。结构为 Map<消费者分组, <Topic, Boolean>> 。默认情况下，不配置表示监听。
    listeners:
      erbadagang-consumer-group:
        # 关闭 test-consumer-group 对 topic1 的监听消费
        topic1: false

captcha:
  email:
    user: ${email.user}
    from: ${email.from}
    host: ${email.host}
    port: ${email.port}
    password: ${email.password}
    expireTime: 300   # 例如验证码过期时间（秒）
